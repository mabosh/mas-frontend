{"ast":null,"code":"var _jsxFileName = \"/opt/cursos/senai/programacao_web/git/semana08/mas-frontend/src/hooks/Auth.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport function AuthProvider({\n  children\n}) {\n  _s();\n\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem('MAS:token');\n    const user = localStorage.getItem('MAS:user');\n\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`;\n      return {\n        token,\n        user: JSON.parse(user)\n      };\n    }\n\n    return {};\n  });\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post('/auth', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('MAS:token', token);\n    localStorage.setItem('MAS:user', JSON.stringify(user));\n    api.defaults.headers.authorization = `Bearer ${token}`;\n    setData({\n      token,\n      user\n    });\n  }, []);\n  const signOut = useCallback(() => {\n    localStorage.removeItem('MAS:token');\n    localStorage.removeItem('MAS:user');\n    setData({});\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: data.user,\n      signIn,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"QN+dLMKqHBeT4tBQDmgb2y0OQOI=\");\n\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/opt/cursos/senai/programacao_web/git/semana08/mas-frontend/src/hooks/Auth.tsx"],"names":["createContext","useCallback","useState","useContext","api","AuthContext","AuthProvider","children","data","setData","token","localStorage","getItem","user","defaults","headers","authorization","JSON","parse","signIn","email","password","response","post","setItem","stringify","signOut","removeItem","useAuth","context","Error"],"mappings":";;;;AAAA,SAAQA,aAAR,EAAuBC,WAAvB,EAAoCC,QAApC,EAA8CC,UAA9C,QAA0E,OAA1E;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AA4BA,MAAMC,WAAW,gBAAGL,aAAa,CAAkB,EAAlB,CAAjC;AAEA,OAAO,SAASM,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAoD;AAAA;;AAEvD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAY,MAAM;AAC9C,UAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAb;;AAEA,QAAGF,KAAK,IAAIG,IAAZ,EAAkB;AACdT,MAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASN,KAAM,EAArD;AACA,aAAO;AAACA,QAAAA,KAAD;AAAQG,QAAAA,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWL,IAAX;AAAd,OAAP;AACH;;AAED,WAAO,EAAP;AACH,GAV+B,CAAhC;AAYA,QAAMM,MAAM,GAAGlB,WAAW,CAAE,OAAO;AAACmB,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAP,KAA6B;AAErD,UAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAJ,CAAS,OAAT,EAAkB;AACrCH,MAAAA,KADqC;AAErCC,MAAAA;AAFqC,KAAlB,CAAvB;AAKA,UAAM;AAACX,MAAAA,KAAD;AAAQG,MAAAA;AAAR,QAAgBS,QAAQ,CAACd,IAA/B;AAEAG,IAAAA,YAAY,CAACa,OAAb,CAAqB,WAArB,EAAkCd,KAAlC;AACAC,IAAAA,YAAY,CAACa,OAAb,CAAqB,UAArB,EAAiCP,IAAI,CAACQ,SAAL,CAAeZ,IAAf,CAAjC;AAEAT,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASN,KAAM,EAArD;AAEAD,IAAAA,OAAO,CAAC;AAACC,MAAAA,KAAD;AAAQG,MAAAA;AAAR,KAAD,CAAP;AAEH,GAhByB,EAgBvB,EAhBuB,CAA1B;AAkBA,QAAMa,OAAO,GAAGzB,WAAW,CAAC,MAAM;AAC9BU,IAAAA,YAAY,CAACgB,UAAb,CAAwB,WAAxB;AACAhB,IAAAA,YAAY,CAACgB,UAAb,CAAwB,UAAxB;AAEAlB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAL0B,EAKxB,EALwB,CAA3B;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAACI,MAAAA,IAAI,EAAEL,IAAI,CAACK,IAAZ;AAAkBM,MAAAA,MAAlB;AAA0BO,MAAAA;AAA1B,KADX;AAAA,cAGKnB;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA9CeD,Y;;KAAAA,Y;AAgDhB,OAAO,SAASsB,OAAT,GAAoC;AAAA;;AAEvC,QAAMC,OAAO,GAAG1B,UAAU,CAACE,WAAD,CAA1B;;AAEA,MAAI,CAACwB,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACH;;IATeD,O","sourcesContent":["import {createContext, useCallback, useState, useContext, ReactNode} from 'react';\nimport api from '../services/api';\n\ninterface User {\n    id: string;\n    name: string;\n    email: string;\n}\n\ninterface AuthState {\n    token: string;\n    user: User;\n}\n\ninterface Credentials {\n    email: string;\n    password: string;\n}\n\ninterface AuthContextData {\n    user: User;\n    signIn(credentials: Credentials): Promise<void>;\n    signOut: () => void\n}\n\ninterface AuthProviderProps {\n    children: ReactNode\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport function AuthProvider({children}:AuthProviderProps) {\n\n    const [data, setData] = useState<AuthState>(() => {\n        const token = localStorage.getItem('MAS:token');\n        const user = localStorage.getItem('MAS:user');\n\n        if(token && user) {\n            api.defaults.headers.authorization = `Bearer ${token}`;\n            return {token, user: JSON.parse(user)}\n        }\n\n        return {} as AuthState;\n    })\n\n    const signIn = useCallback( async ({email, password}) => {\n        \n        const response = await api.post('/auth', {\n            email,\n            password\n        })\n\n        const {token, user} = response.data;\n\n        localStorage.setItem('MAS:token', token);\n        localStorage.setItem('MAS:user', JSON.stringify(user));\n\n        api.defaults.headers.authorization = `Bearer ${token}`;\n\n        setData({token, user});\n\n    }, []);\n\n    const signOut = useCallback(() => {\n        localStorage.removeItem('MAS:token');\n        localStorage.removeItem('MAS:user');\n\n        setData({} as AuthState);\n    }, []);\n\n    return (\n        <AuthContext.Provider\n            value={{user: data.user, signIn, signOut}}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport function useAuth(): AuthContextData {\n    \n    const context = useContext(AuthContext);\n  \n    if (!context) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n  \n    return context;\n}\n"]},"metadata":{},"sourceType":"module"}